"""
Model for testing purposes.
"""

directions = [left, right]
congruencies = [incongruent, congruent]

test TestModel {
	conditions {
      | direction       | category          | response  |
      |-----------------+-------------------+-----------|
      | directions loop | congruencies loop | direction |
    }
	
	trial {
    duration = 100 if direction == left else 200
		fix: cross() for 1000..3000 choose
    exec: at 50 circle(radius 100, posx left if direction == right else right) for 1000..2000 choose
          at .100 sound(freq 100) for 400
          at 300 image(file "images/{direction}-{category}.png") for duration
          at +100 rectangle(width 200 + 300 / 2, posx left)
          at .-100 rectangle(width 100, posx left)
		error: sound(freq 300) for 500
		correct: sound(freq 700) for 300
	}
}

screen intro {
    Welcome
    -------

    In the following test you will be presented with a line of 5 arrow pointing
    left or right. You should respond by the direction of the *middle arrow* as 
	  fast as possible by pressing left or right arrow on the keyboard or touching/clicking
    on appropriate button on the screen.

    You will first do a practice run with 4 trials. After that a real run with
    20 trial will be performed.

    Press SPACE or touch/click the screen to continue
}

screen real {
    Real block
    ----------
    
    Now a real block of trials will be performed.

    Press SPACE or touch/click the screen to continue
}



flow {

  // Show introduction
  show intro

  // Perform practice test serie
  repeat TestModel 1 time random as practice

    
  // Just to show that we can repeat not only a single test but also
  // a block
  repeat {
    show real 

    // Perform real test serie (collects data).
    // `full random` means that all 5 * 4 trials will
    // be in random order
    repeat TestModel 5 times full random
  } 3 times

}

target PsychoPy {
  // Target folder where test should be generated
  output = "/home/igor/tmp/eriksenPsycho/"

  responses {
    left = left
    right = right
  }  
}
