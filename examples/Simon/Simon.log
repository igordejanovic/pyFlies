"""
A simple behavioural task to assess a Simon effect.

See also:
http://en.wikipedia.org/wiki/Simon_effect

"""

Tests: [<Test:Simon>]
Screens: [<Screen:Practice>, <Screen:Real>]

Variables:
    positions = [left, right]
    colors = [green, red]
    responses = [left, right]



Test: Simon
--------------------------------------------------------------------------
Components with param values:
Simon_cross_0 = cross(position (0, 0) constant, size 20 constant, color #ffffff constant, fillColor #ffffff constant, )
Simon_rectangle_1 = rectangle(position (0, 0), color #ffffff, fillColor #ffffff, size (20, 0) constant, )
Simon_key_2 = key(valid space, )
Simon_sound_3 = sound(freq 1000 constant, )
Simon_sound_4 = sound(freq 500 constant, )

Conditions:

| position | color | congruency  | response |
|----------+-------+-------------+----------|
| left     | green | congruent   | left     |
| left     | red   | incongruent | right    |
| right    | green | incongruent | left     |
| right    | red   | congruent   | right    |


Detailed with components for each trial:

Trial 1
| position | color | congruency  | response |
|----------+-------+-------------+----------|
| left     | green | congruent   | left     |

  Variables:
    positions = [left, right]
    colors = [green, red]
    responses = [left, right]
    position = left
    color = green
    congruency = congruent
    response = left

  Phases:
    fix:
            at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 3161
    exec:
            at 0 rectangle(position left, color green, fillColor green, size (20, 0)) for 0
            at 0 key(valid left) for 0
    error:
            at 0 sound(freq 1000) for 300
    correct:
            at 0 sound(freq 500) for 300


Trial 2
| position | color | congruency  | response |
|----------+-------+-------------+----------|
| left     | red   | incongruent | right    |

  Variables:
    positions = [left, right]
    colors = [green, red]
    responses = [left, right]
    position = left
    color = red
    congruency = incongruent
    response = right

  Phases:
    fix:
            at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 3288
    exec:
            at 0 rectangle(position left, color red, fillColor red, size (20, 0)) for 0
            at 0 key(valid right) for 0
    error:
            at 0 sound(freq 1000) for 300
    correct:
            at 0 sound(freq 500) for 300


Trial 3
| position | color | congruency  | response |
|----------+-------+-------------+----------|
| right    | green | incongruent | left     |

  Variables:
    positions = [left, right]
    colors = [green, red]
    responses = [left, right]
    position = right
    color = green
    congruency = incongruent
    response = left

  Phases:
    fix:
            at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 3040
    exec:
            at 0 rectangle(position right, color green, fillColor green, size (20, 0)) for 0
            at 0 key(valid left) for 0
    error:
            at 0 sound(freq 1000) for 300
    correct:
            at 0 sound(freq 500) for 300


Trial 4
| position | color | congruency  | response |
|----------+-------+-------------+----------|
| right    | red   | congruent   | right    |

  Variables:
    positions = [left, right]
    colors = [green, red]
    responses = [left, right]
    position = right
    color = red
    congruency = congruent
    response = right

  Phases:
    fix:
            at 0 cross(position (0, 0), size 20, color #ffffff, fillColor #ffffff) for 2049
    exec:
            at 0 rectangle(position right, color red, fillColor red, size (20, 0)) for 0
            at 0 key(valid right) for 0
    error:
            at 0 sound(freq 1000) for 300
    correct:
            at 0 sound(freq 500) for 300


--------------------------------------------------------------------------
